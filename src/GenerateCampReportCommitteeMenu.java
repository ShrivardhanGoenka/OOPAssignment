import java.util.ArrayList;
import java.util.HashMap;

/**
 * The {@code GenerateCampReportCommitteeMenu} class provides the execution logics of the committee's menu for generating the camp report.
 * The camp report generated by camp committee will contains the camp information, attendee list, and camp committee list.
 */
public class GenerateCampReportCommitteeMenu implements IMenu<CampCommittee> {
	/**
	* Executes the menu logics for generating report.
	* The camp committe can choose to include or not include attendee list and committee list
	* The generated report file path will be shown in the user console.
	* @param committeeObject       The camp committee that runs the menu
	*/
	public void runMenu(CampCommittee committeeObject) {
		Camp camp = committeeObject.getCamp();
		ArrayList<String> filterField = new ArrayList<>();
		filterField.add("Attendee");
		filterField.add("Committee");
		HashMap<String, Boolean> filter = new HashMap<>();
		ConsoleReaderString crs = new ConsoleReaderString();
		TXTFileReportDBWriter databaseWriter = new TXTFileReportDBWriter();
		for (String field: filterField) {
			System.out.printf("Do you want to include camp %s in the report? (y/n): ", field);
			try {
				String choice = crs.readFromConsole();
				if (choice.equals("y")) {
					filter.put(field, true);
				} else if (choice.equals("n")) {
					filter.put(field, false);
				} else {
					System.out.println("Invalid choice");
					return;
				}
			} catch(InputException e) {
				System.out.println(e.getMessage());
			}
		}
		databaseWriter.writeToDatabase(camp, filter, committeeObject.getUserID());
	}

	/**
	 * @return the menu description
	 */
	public String getMenuDescription () {
		return "Generate Camp Report";
	}
}
